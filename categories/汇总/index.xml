<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>汇总 on xiangcman</title>
        <link>http://xiangcman.xyz/categories/%E6%B1%87%E6%80%BB/</link>
        <description>Recent content in 汇总 on xiangcman</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-CN</language>
        <copyright>xiangcheng</copyright>
        <lastBuildDate>Wed, 22 Jan 2025 00:00:00 +0000</lastBuildDate><atom:link href="http://xiangcman.xyz/categories/%E6%B1%87%E6%80%BB/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>高质量文章汇总</title>
        <link>http://xiangcman.xyz/p/%E9%AB%98%E8%B4%A8%E9%87%8F%E6%96%87%E7%AB%A0%E6%B1%87%E6%80%BB/</link>
        <pubDate>Wed, 22 Jan 2025 00:00:00 +0000</pubDate>
        
        <guid>http://xiangcman.xyz/p/%E9%AB%98%E8%B4%A8%E9%87%8F%E6%96%87%E7%AB%A0%E6%B1%87%E6%80%BB/</guid>
        <description>&lt;h3 id=&#34;recyclerview系列&#34;&gt;Recyclerview系列
&lt;/h3&gt;&lt;h4 id=&#34;缓存相关&#34;&gt;缓存相关
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.cn/post/6844903778303344647&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;RecyclerView 缓存机制 | 如何复用表项？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.cn/post/6844903778303361038&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;RecyclerView 缓存机制 | 回收些什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.cn/post/6844903778307538958&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;RecyclerView 缓存机制 | 回收到哪去？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.cn/post/6844903780006264845&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;RecyclerView缓存机制 | scrap view 的生命周期&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.cn/post/6903290882095579143&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;RecyclerView 面试题 | 滚动时表项是如何被填充或回收的？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.cn/post/6930412704578404360/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;RecyclerView 面试题 | 哪些情况下表项会被回收到缓存池？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.cn/post/6965633977960890381&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;RecyclerView 刷新列表数据的 notifyDataSetChanged() 为什么是昂贵的?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.cn/post/7181979065488769083&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;掌握这17张图，没人比你更懂RecyclerView的预加载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.cn/post/7200303038078681145&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【动画图解】这个值取对了，ViewPager2才能纵享丝滑&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;动画相关&#34;&gt;动画相关
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.cn/post/6890288761783975950&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;RecyclerView 动画原理 | 换个姿势看源码（pre-layout）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.cn/post/6892809944702124045&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;RecyclerView 动画原理 | pre-layout，post-layout 与 scrap 缓存的关系）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.cn/post/6895523568025600014&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;RecyclerView 动画原理 | 如何存储并应用动画属性值？）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;优化相关&#34;&gt;优化相关
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.cn/post/7164032795310817294&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;浅谈RecyclerView的性能优化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.cn/post/6939666015500369950&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;RecyclerView 性能优化 | 把加载表项耗时减半 (一)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.cn/post/7248599585752793125&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;RecyclerView性能优化之异步预加载&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;kotlin系列&#34;&gt;Kotlin系列
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.cn/post/7068901166456766472&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Kotlin中的协程、上下文和作用域&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.cn/post/7064541449332719647&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;抽丝剥茧聊协程之深入理解Continuation原理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://rengwuxian.com/kotlin-source-noinline-crossinline/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Kotlin 源码里成吨的 noinline 和 crossinline 是干嘛的？看完这个视频你转头也写了一吨&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.cn/post/7049537608262615070&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;抽丝剥茧聊Kotlin协程之协程异常处理机制分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://rengwuxian.com/kotlin-generics/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;kotlin的泛型&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;surfaceflinger系列&#34;&gt;SurfaceFlinger系列
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/Luoshengyang/article/details/7846923&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Android应用程序与SurfaceFlinger服务的关系概述和学习计划&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/Luoshengyang/article/details/8010977&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Android系统Surface机制的SurfaceFlinger服务简要介绍和学习计划&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;activity系列&#34;&gt;Activity系列
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/Luoshengyang/article/details/8170307&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Android应用程序窗口（Activity）实现框架简要介绍和学习计划&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;wms系列&#34;&gt;WMS系列
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/Luoshengyang/article/details/8462738&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Android窗口管理服务WindowManagerService的简要介绍和学习计划&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;资源打包系列&#34;&gt;资源打包系列
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/Luoshengyang/article/details/8744683&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Android应用程序资源的编译和打包过程分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/Luoshengyang/article/details/8806798&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Android应用程序资源的查找过程分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.cn/post/7113713363900694565&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Android Apk 编译打包流程，了解一下~&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;assetmanager系列&#34;&gt;AssetManager系列
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/Luoshengyang/article/details/8738877&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Android资源管理框架（Asset Manager）简要介绍和学习计划&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;硬件加速系列&#34;&gt;硬件加速系列
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/Luoshengyang/article/details/45601143&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Android应用程序UI硬件加速渲染技术简要介绍和学习计划&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;asm相关&#34;&gt;ASM相关
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.cn/post/6999646242125529096&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Android 进阶之路：ASM 修改字节码，这样学就对了！&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;gradle相关&#34;&gt;Gradle相关
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.cn/post/6882178101191639053&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Gradle 爬坑指南 &amp;ndash; 导论&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.cn/post/6888977881679495175&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Gradle 爬坑指南 &amp;ndash; 概念初解、Grovvy 语法、常见 API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.cn/post/6889090530593112077&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Gradle 爬坑指南 &amp;ndash; 理解 Plugin、Task、构建流程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.cn/post/6890549273105006600&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Gradle 爬坑指南 &amp;ndash; Gradle 核心模型、Hook 函数、ext 扩展属性、Project API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.cn/post/6844904122492125198&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;深度探索 Gradle 自动化构建技术（一、Gradle 核心配置篇）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.cn/post/6844904128594853902&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;深度探索 Gradle 自动化构建技术（二、Groovy 筑基篇）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.cn/post/6844904132092903437&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;深度探索 Gradle 自动化构建技术（三、Gradle 核心解密）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.cn/post/6844904135314128903&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;深度探索 Gradle 自动化构建技术（四、自定义 Gradle 插件）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.cn/post/6844904142725447687&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;深度探索 Gradle 自动化构建技术（五、Gradle 插件架构实现原理剖析 — 上）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.cn/post/6844904142717075469&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;深度探索 Gradle 自动化构建技术（五、Gradle 插件架构实现原理剖析 — 下）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.cn/post/6844904202393960455&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;深入探索 Gradle 自动化构建技术（九、Gradle 插件平台化框架 ByteX 探秘之旅）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;设计模式相关&#34;&gt;设计模式相关
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.cn/post/7198700701952983100&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Java常用设计模式(一)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.cn/post/7199907126688825400&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Java常用设计模式(二)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.cn/post/7202820042688528445&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Java常用设计模式(三)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/zhaokaiqiang1992/article/details/50285021?spm=1001.2014.3001.5502&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《Android源码设计模式解析》读书笔记——Android中你应该知道的设计模式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;性能分析&#34;&gt;性能分析
&lt;/h3&gt;&lt;h4 id=&#34;profiler相关使用&#34;&gt;Profiler相关使用
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://developer.android.com/studio/profile/cpu-profiler&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Android Studio中System Trace几大板块&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://developer.android.com/studio/profile/inspect-traces&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Android Studio中方法调用(Call Chart、Flame Chart、Top Down、Bottom Up、Event)的几种展现形式讲解&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://developer.android.com/studio/profile/jank-detection&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Android Studio中卡顿检测模块讲解&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://developer.android.com/studio/profile/power-profiler?hl=zh-cn&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Android Studio中耗电量讲解&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://developer.android.com/studio/profile/generate-trace-logs?hl=zh-cn&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Android Studio中生成trace的路径&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://developer.android.com/studio/profile/capture-heap-dump?hl=zh-cn&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Android Studio中Heap Dump获取堆的快照&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://developer.android.com/studio/profile/sample-callstack&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Android Studio中对trace进行采样收集&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://developer.android.com/studio/profile/record-java-kotlin-allocations&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Android Studio中采集Java或Kotlin的内存占用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://developer.android.com/studio/profile/record-java-kotlin-methods&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Android Studio中采集Java或Kotlin的方法调用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://developer.android.com/studio/profile/record-native-allocations?hl=zh-cn&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Android Studio中采集native方法的内存占用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;渲染相关&#34;&gt;渲染相关
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://developer.android.com/topic/performance/rendering/inspect-gpu-rendering?hl=zh-cn&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;检查GPU渲染速度和过度绘制&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://developer.android.com/topic/performance/rendering/overdraw?hl=zh-cn&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;减少过度绘制&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://developer.android.com/topic/performance/rendering/optimizing-view-hierarchies?hl=zh-cn&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;性能和视图层次结构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://developer.android.com/topic/performance/rendering/profile-gpu?hl=zh-cn&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;使用 GPU 渲染模式分析工具进行分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://developer.android.com/develop/ui/views/layout/improving-layouts?hl=zh-cn&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;改善布局性能&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;perfetto&#34;&gt;perfetto
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://developer.android.com/tools/perfetto?hl=zh-cn&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;使用adb进行捕捉perfetto文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://perfetto.dev/docs/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;perfetto官网介绍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://perfetto.dev/docs/quickstart/android-tracing&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;在安卓平台进行捕捉perfetto文件&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;systemtrace&#34;&gt;SystemTrace
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://developer.android.com/topic/performance/tracing/navigate-report?hl=zh-cn&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;如何进行浏览systemtrace报告&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://developer.android.com/topic/performance/tracing/command-line?hl=zh-cn&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;通过命令启动System Trace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://developer.android.com/topic/performance/tracing/on-device?hl=zh-cn&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;手机上启动System Trace&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;大佬博客系列&#34;&gt;大佬博客系列
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/Luoshengyang?type=blog&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;老罗&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://androidperformance.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Gracker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://juejin.cn/user/668101431009496/posts&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;程序员江同学&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;&#34; &gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
